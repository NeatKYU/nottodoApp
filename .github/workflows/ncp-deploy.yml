name: ncp deploy

on:
    push:
        branches:
            - main

jobs:
    push_to_registry:
        name: Push to ncp container registry
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to NCP Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
                  username: ${{ secrets.NCP_ACCESS_KEY }}
                  password: ${{ secrets.NCP_SECRET_KEY }}
            - name: build and push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name:latest
                  cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/prv-frontend:latest
                  cache-to: type=inline
                  secrets: |
                      GIT_AUTH_TOKEN=${{ secrets.GIT_TOKEN }}

    pull_from_registry:
        name: Connect server ssh and pull from container registry
        needs: push_to_registry
        runs-on: ubuntu-latest
        steps:
            - name: connect ssh
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.NCP_SERVER_HOST }}
                  username: ${{ secrets.NCP_SERVER_USERNAME }}
                  password: ${{ secrets.NCP_SERVER_PASSWORD }}
                  port: ${{ secrets.NCP_SERVER_PORT }}
                  script: |
                      docker login --username ${{ secrets.NCP_ACCESS_KEY }} --password-stdin ${{ secrets.NCP_SECRET_KEY }} ${{ secrets.NCP_CONTAINER_REGISTRY }}
                      docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name
                      docker stop $(docker ps -aq)
                      docker rm $(docker ps -aq)
                      docker run -d -p 80:80 ${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name
                      docker image prune -f
